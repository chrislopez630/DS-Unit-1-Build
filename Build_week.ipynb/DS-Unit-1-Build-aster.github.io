{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Build week",
      "provenance": [],
      "authorship_tag": "ABX9TyPuTgi/GiRMHpQnjT/ceP2d",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/chrislopez630/DS-Unit-1-Build-aster.github.io/blob/master/Build_week.ipynb/DS-Unit-1-Build-aster.github.io\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "nNKBjjyC72TR",
        "colab_type": "text"
      },
      "source": [
        "##What is the amount of inmates incarcerated, and what is the race of them. \n",
        "\n",
        "Student research question is concise, direct, and practical. Student can communicate their main findings in 1-2 sentences. Student potentially had to alter their course on the projects based on the problem and the data, these learnings are documented and articulated by the project."
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5Ar8QVvIfqFI",
        "colab_type": "text"
      },
      "source": [
        "\n",
        "##Loading Dataset onto data frame\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Zp9eCe7PcRVK",
        "colab_type": "code",
        "colab": {
          "resources": {
            "http://localhost:8080/nbextensions/google.colab/files.js": {
              "data": "Ly8gQ29weXJpZ2h0IDIwMTcgR29vZ2xlIExMQwovLwovLyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKLy8geW91IG1heSBub3QgdXNlIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLgovLyBZb3UgbWF5IG9idGFpbiBhIGNvcHkgb2YgdGhlIExpY2Vuc2UgYXQKLy8KLy8gICAgICBodHRwOi8vd3d3LmFwYWNoZS5vcmcvbGljZW5zZXMvTElDRU5TRS0yLjAKLy8KLy8gVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZQovLyBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiAiQVMgSVMiIEJBU0lTLAovLyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KLy8gU2VlIHRoZSBMaWNlbnNlIGZvciB0aGUgc3BlY2lmaWMgbGFuZ3VhZ2UgZ292ZXJuaW5nIHBlcm1pc3Npb25zIGFuZAovLyBsaW1pdGF0aW9ucyB1bmRlciB0aGUgTGljZW5zZS4KCi8qKgogKiBAZmlsZW92ZXJ2aWV3IEhlbHBlcnMgZm9yIGdvb2dsZS5jb2xhYiBQeXRob24gbW9kdWxlLgogKi8KKGZ1bmN0aW9uKHNjb3BlKSB7CmZ1bmN0aW9uIHNwYW4odGV4dCwgc3R5bGVBdHRyaWJ1dGVzID0ge30pIHsKICBjb25zdCBlbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3BhbicpOwogIGVsZW1lbnQudGV4dENvbnRlbnQgPSB0ZXh0OwogIGZvciAoY29uc3Qga2V5IG9mIE9iamVjdC5rZXlzKHN0eWxlQXR0cmlidXRlcykpIHsKICAgIGVsZW1lbnQuc3R5bGVba2V5XSA9IHN0eWxlQXR0cmlidXRlc1trZXldOwogIH0KICByZXR1cm4gZWxlbWVudDsKfQoKLy8gTWF4IG51bWJlciBvZiBieXRlcyB3aGljaCB3aWxsIGJlIHVwbG9hZGVkIGF0IGEgdGltZS4KY29uc3QgTUFYX1BBWUxPQURfU0laRSA9IDEwMCAqIDEwMjQ7CgpmdW5jdGlvbiBfdXBsb2FkRmlsZXMoaW5wdXRJZCwgb3V0cHV0SWQpIHsKICBjb25zdCBzdGVwcyA9IHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCk7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICAvLyBDYWNoZSBzdGVwcyBvbiB0aGUgb3V0cHV0RWxlbWVudCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgdGhlIG5leHQgY2FsbAogIC8vIHRvIHVwbG9hZEZpbGVzQ29udGludWUgZnJvbSBQeXRob24uCiAgb3V0cHV0RWxlbWVudC5zdGVwcyA9IHN0ZXBzOwoKICByZXR1cm4gX3VwbG9hZEZpbGVzQ29udGludWUob3V0cHV0SWQpOwp9CgovLyBUaGlzIGlzIHJvdWdobHkgYW4gYXN5bmMgZ2VuZXJhdG9yIChub3Qgc3VwcG9ydGVkIGluIHRoZSBicm93c2VyIHlldCksCi8vIHdoZXJlIHRoZXJlIGFyZSBtdWx0aXBsZSBhc3luY2hyb25vdXMgc3RlcHMgYW5kIHRoZSBQeXRob24gc2lkZSBpcyBnb2luZwovLyB0byBwb2xsIGZvciBjb21wbGV0aW9uIG9mIGVhY2ggc3RlcC4KLy8gVGhpcyB1c2VzIGEgUHJvbWlzZSB0byBibG9jayB0aGUgcHl0aG9uIHNpZGUgb24gY29tcGxldGlvbiBvZiBlYWNoIHN0ZXAsCi8vIHRoZW4gcGFzc2VzIHRoZSByZXN1bHQgb2YgdGhlIHByZXZpb3VzIHN0ZXAgYXMgdGhlIGlucHV0IHRvIHRoZSBuZXh0IHN0ZXAuCmZ1bmN0aW9uIF91cGxvYWRGaWxlc0NvbnRpbnVlKG91dHB1dElkKSB7CiAgY29uc3Qgb3V0cHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKG91dHB1dElkKTsKICBjb25zdCBzdGVwcyA9IG91dHB1dEVsZW1lbnQuc3RlcHM7CgogIGNvbnN0IG5leHQgPSBzdGVwcy5uZXh0KG91dHB1dEVsZW1lbnQubGFzdFByb21pc2VWYWx1ZSk7CiAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShuZXh0LnZhbHVlLnByb21pc2UpLnRoZW4oKHZhbHVlKSA9PiB7CiAgICAvLyBDYWNoZSB0aGUgbGFzdCBwcm9taXNlIHZhbHVlIHRvIG1ha2UgaXQgYXZhaWxhYmxlIHRvIHRoZSBuZXh0CiAgICAvLyBzdGVwIG9mIHRoZSBnZW5lcmF0b3IuCiAgICBvdXRwdXRFbGVtZW50Lmxhc3RQcm9taXNlVmFsdWUgPSB2YWx1ZTsKICAgIHJldHVybiBuZXh0LnZhbHVlLnJlc3BvbnNlOwogIH0pOwp9CgovKioKICogR2VuZXJhdG9yIGZ1bmN0aW9uIHdoaWNoIGlzIGNhbGxlZCBiZXR3ZWVuIGVhY2ggYXN5bmMgc3RlcCBvZiB0aGUgdXBsb2FkCiAqIHByb2Nlc3MuCiAqIEBwYXJhbSB7c3RyaW5nfSBpbnB1dElkIEVsZW1lbnQgSUQgb2YgdGhlIGlucHV0IGZpbGUgcGlja2VyIGVsZW1lbnQuCiAqIEBwYXJhbSB7c3RyaW5nfSBvdXRwdXRJZCBFbGVtZW50IElEIG9mIHRoZSBvdXRwdXQgZGlzcGxheS4KICogQHJldHVybiB7IUl0ZXJhYmxlPCFPYmplY3Q+fSBJdGVyYWJsZSBvZiBuZXh0IHN0ZXBzLgogKi8KZnVuY3Rpb24qIHVwbG9hZEZpbGVzU3RlcChpbnB1dElkLCBvdXRwdXRJZCkgewogIGNvbnN0IGlucHV0RWxlbWVudCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlucHV0SWQpOwogIGlucHV0RWxlbWVudC5kaXNhYmxlZCA9IGZhbHNlOwoKICBjb25zdCBvdXRwdXRFbGVtZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQob3V0cHV0SWQpOwogIG91dHB1dEVsZW1lbnQuaW5uZXJIVE1MID0gJyc7CgogIGNvbnN0IHBpY2tlZFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgaW5wdXRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2NoYW5nZScsIChlKSA9PiB7CiAgICAgIHJlc29sdmUoZS50YXJnZXQuZmlsZXMpOwogICAgfSk7CiAgfSk7CgogIGNvbnN0IGNhbmNlbCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpOwogIGlucHV0RWxlbWVudC5wYXJlbnRFbGVtZW50LmFwcGVuZENoaWxkKGNhbmNlbCk7CiAgY2FuY2VsLnRleHRDb250ZW50ID0gJ0NhbmNlbCB1cGxvYWQnOwogIGNvbnN0IGNhbmNlbFByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4gewogICAgY2FuY2VsLm9uY2xpY2sgPSAoKSA9PiB7CiAgICAgIHJlc29sdmUobnVsbCk7CiAgICB9OwogIH0pOwoKICAvLyBXYWl0IGZvciB0aGUgdXNlciB0byBwaWNrIHRoZSBmaWxlcy4KICBjb25zdCBmaWxlcyA9IHlpZWxkIHsKICAgIHByb21pc2U6IFByb21pc2UucmFjZShbcGlja2VkUHJvbWlzZSwgY2FuY2VsUHJvbWlzZV0pLAogICAgcmVzcG9uc2U6IHsKICAgICAgYWN0aW9uOiAnc3RhcnRpbmcnLAogICAgfQogIH07CgogIGNhbmNlbC5yZW1vdmUoKTsKCiAgLy8gRGlzYWJsZSB0aGUgaW5wdXQgZWxlbWVudCBzaW5jZSBmdXJ0aGVyIHBpY2tzIGFyZSBub3QgYWxsb3dlZC4KICBpbnB1dEVsZW1lbnQuZGlzYWJsZWQgPSB0cnVlOwoKICBpZiAoIWZpbGVzKSB7CiAgICByZXR1cm4gewogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbXBsZXRlJywKICAgICAgfQogICAgfTsKICB9CgogIGZvciAoY29uc3QgZmlsZSBvZiBmaWxlcykgewogICAgY29uc3QgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdsaScpOwogICAgbGkuYXBwZW5kKHNwYW4oZmlsZS5uYW1lLCB7Zm9udFdlaWdodDogJ2JvbGQnfSkpOwogICAgbGkuYXBwZW5kKHNwYW4oCiAgICAgICAgYCgke2ZpbGUudHlwZSB8fCAnbi9hJ30pIC0gJHtmaWxlLnNpemV9IGJ5dGVzLCBgICsKICAgICAgICBgbGFzdCBtb2RpZmllZDogJHsKICAgICAgICAgICAgZmlsZS5sYXN0TW9kaWZpZWREYXRlID8gZmlsZS5sYXN0TW9kaWZpZWREYXRlLnRvTG9jYWxlRGF0ZVN0cmluZygpIDoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJ24vYSd9IC0gYCkpOwogICAgY29uc3QgcGVyY2VudCA9IHNwYW4oJzAlIGRvbmUnKTsKICAgIGxpLmFwcGVuZENoaWxkKHBlcmNlbnQpOwoKICAgIG91dHB1dEVsZW1lbnQuYXBwZW5kQ2hpbGQobGkpOwoKICAgIGNvbnN0IGZpbGVEYXRhUHJvbWlzZSA9IG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7CiAgICAgIGNvbnN0IHJlYWRlciA9IG5ldyBGaWxlUmVhZGVyKCk7CiAgICAgIHJlYWRlci5vbmxvYWQgPSAoZSkgPT4gewogICAgICAgIHJlc29sdmUoZS50YXJnZXQucmVzdWx0KTsKICAgICAgfTsKICAgICAgcmVhZGVyLnJlYWRBc0FycmF5QnVmZmVyKGZpbGUpOwogICAgfSk7CiAgICAvLyBXYWl0IGZvciB0aGUgZGF0YSB0byBiZSByZWFkeS4KICAgIGxldCBmaWxlRGF0YSA9IHlpZWxkIHsKICAgICAgcHJvbWlzZTogZmlsZURhdGFQcm9taXNlLAogICAgICByZXNwb25zZTogewogICAgICAgIGFjdGlvbjogJ2NvbnRpbnVlJywKICAgICAgfQogICAgfTsKCiAgICAvLyBVc2UgYSBjaHVua2VkIHNlbmRpbmcgdG8gYXZvaWQgbWVzc2FnZSBzaXplIGxpbWl0cy4gU2VlIGIvNjIxMTU2NjAuCiAgICBsZXQgcG9zaXRpb24gPSAwOwogICAgd2hpbGUgKHBvc2l0aW9uIDwgZmlsZURhdGEuYnl0ZUxlbmd0aCkgewogICAgICBjb25zdCBsZW5ndGggPSBNYXRoLm1pbihmaWxlRGF0YS5ieXRlTGVuZ3RoIC0gcG9zaXRpb24sIE1BWF9QQVlMT0FEX1NJWkUpOwogICAgICBjb25zdCBjaHVuayA9IG5ldyBVaW50OEFycmF5KGZpbGVEYXRhLCBwb3NpdGlvbiwgbGVuZ3RoKTsKICAgICAgcG9zaXRpb24gKz0gbGVuZ3RoOwoKICAgICAgY29uc3QgYmFzZTY0ID0gYnRvYShTdHJpbmcuZnJvbUNoYXJDb2RlLmFwcGx5KG51bGwsIGNodW5rKSk7CiAgICAgIHlpZWxkIHsKICAgICAgICByZXNwb25zZTogewogICAgICAgICAgYWN0aW9uOiAnYXBwZW5kJywKICAgICAgICAgIGZpbGU6IGZpbGUubmFtZSwKICAgICAgICAgIGRhdGE6IGJhc2U2NCwKICAgICAgICB9LAogICAgICB9OwogICAgICBwZXJjZW50LnRleHRDb250ZW50ID0KICAgICAgICAgIGAke01hdGgucm91bmQoKHBvc2l0aW9uIC8gZmlsZURhdGEuYnl0ZUxlbmd0aCkgKiAxMDApfSUgZG9uZWA7CiAgICB9CiAgfQoKICAvLyBBbGwgZG9uZS4KICB5aWVsZCB7CiAgICByZXNwb25zZTogewogICAgICBhY3Rpb246ICdjb21wbGV0ZScsCiAgICB9CiAgfTsKfQoKc2NvcGUuZ29vZ2xlID0gc2NvcGUuZ29vZ2xlIHx8IHt9OwpzY29wZS5nb29nbGUuY29sYWIgPSBzY29wZS5nb29nbGUuY29sYWIgfHwge307CnNjb3BlLmdvb2dsZS5jb2xhYi5fZmlsZXMgPSB7CiAgX3VwbG9hZEZpbGVzLAogIF91cGxvYWRGaWxlc0NvbnRpbnVlLAp9Owp9KShzZWxmKTsK",
              "ok": true,
              "headers": [
                [
                  "content-type",
                  "application/javascript"
                ]
              ],
              "status": 200,
              "status_text": ""
            }
          },
          "base_uri": "https://localhost:8080/",
          "height": 72
        },
        "outputId": "0eb01385-4b87-4e5c-f037-a20fc42fcecf"
      },
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from google.colab import files\n",
        "uploaded = files.upload()"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/html": [
              "\n",
              "     <input type=\"file\" id=\"files-345411e9-6fc3-4436-992a-af7e6d91352e\" name=\"files[]\" multiple disabled\n",
              "        style=\"border:none\" />\n",
              "     <output id=\"result-345411e9-6fc3-4436-992a-af7e6d91352e\">\n",
              "      Upload widget is only available when the cell has been executed in the\n",
              "      current browser session. Please rerun this cell to enable.\n",
              "      </output>\n",
              "      <script src=\"/nbextensions/google.colab/files.js\"></script> "
            ],
            "text/plain": [
              "<IPython.core.display.HTML object>"
            ]
          },
          "metadata": {
            "tags": []
          }
        },
        {
          "output_type": "stream",
          "text": [
            "Saving archive.zip to archive.zip\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3XyEAJYOY9Sx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "0a268333-3633-4cc2-f4c7-72184f26a959"
      },
      "source": [
        "!unzip archive.zip"
      ],
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Archive:  archive.zip\n",
            "replace Disclaimer.docx? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n",
            "replace Inmate_In_Custody.xlsx? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n",
            "replace daily-inmates-in-custody.csv? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n",
            "replace socrata_metadata.json? [y]es, [n]o, [A]ll, [N]one, [r]ename: n\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "3nqjgzjFcppS",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "e8e91280-4d0e-4f84-8317-dd1b3a691ee4"
      },
      "source": [
        "import io\n",
        "df = pd.read_csv('daily-inmates-in-custody.csv')\n",
        "df"
      ],
      "execution_count": 101,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INMATEID</th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>DISCHARGED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>INMATE_STATUS_CODE</th>\n",
              "      <th>SEALED</th>\n",
              "      <th>SRG_FLG</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "      <th>INFRACTION</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152258</td>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>140.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>89404</td>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>DEP</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>120.14</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7049</td>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>DEP</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>140.15</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20207729</td>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>CS</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>156.10</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20203998</td>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>19225</td>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>20093747</td>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>93606</td>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>110-125.25</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>14481</td>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>130.96</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>167979</td>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>DE</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>220.41</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 13 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      INMATEID              ADMITTED_DT  ...  TOP_CHARGE INFRACTION\n",
              "0       152258  2018-08-24T01:46:33.000  ...      140.25          N\n",
              "1        89404  2019-10-16T11:06:07.000  ...      120.14          N\n",
              "2         7049  2019-11-10T02:32:10.000  ...      140.15          N\n",
              "3     20207729  2019-10-23T03:26:50.000  ...      156.10          N\n",
              "4     20203998  2019-05-02T01:35:22.000  ...      125.25          Y\n",
              "...        ...                      ...  ...         ...        ...\n",
              "6813     19225  2017-02-03T21:36:59.000  ...      125.25          N\n",
              "6814  20093747  2018-11-14T01:38:36.000  ...  110-125.25          N\n",
              "6815     93606  2018-01-22T23:57:24.000  ...  110-125.25          Y\n",
              "6816     14481  2017-08-23T17:21:51.000  ...      130.96          N\n",
              "6817    167979  2018-09-19T16:21:38.000  ...      220.41          N\n",
              "\n",
              "[6818 rows x 13 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 101
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "vVUqK0Ltf0oO",
        "colab_type": "text"
      },
      "source": [
        "##deleting unwated columns (inmate ID, inmate status code, and top charge)"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NDMtAVXkbA38",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del df['INMATE_STATUS_CODE']"
      ],
      "execution_count": 71,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "1oAb0HUBbE7I",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "2c4e1842-035b-4378-84ea-dee91ec7db0c"
      },
      "source": [
        "df"
      ],
      "execution_count": 72,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INMATEID</th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>DISCHARGED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>SEALED</th>\n",
              "      <th>SRG_FLG</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "      <th>INFRACTION</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152258</td>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>140.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>89404</td>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>120.14</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7049</td>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>140.15</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20207729</td>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>156.10</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20203998</td>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>19225</td>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>20093747</td>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>93606</td>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>N</td>\n",
              "      <td>Y</td>\n",
              "      <td>110-125.25</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>14481</td>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>130.96</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>167979</td>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>N</td>\n",
              "      <td>220.41</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 12 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      INMATEID              ADMITTED_DT  ...  TOP_CHARGE INFRACTION\n",
              "0       152258  2018-08-24T01:46:33.000  ...      140.25          N\n",
              "1        89404  2019-10-16T11:06:07.000  ...      120.14          N\n",
              "2         7049  2019-11-10T02:32:10.000  ...      140.15          N\n",
              "3     20207729  2019-10-23T03:26:50.000  ...      156.10          N\n",
              "4     20203998  2019-05-02T01:35:22.000  ...      125.25          Y\n",
              "...        ...                      ...  ...         ...        ...\n",
              "6813     19225  2017-02-03T21:36:59.000  ...      125.25          N\n",
              "6814  20093747  2018-11-14T01:38:36.000  ...  110-125.25          N\n",
              "6815     93606  2018-01-22T23:57:24.000  ...  110-125.25          Y\n",
              "6816     14481  2017-08-23T17:21:51.000  ...      130.96          N\n",
              "6817    167979  2018-09-19T16:21:38.000  ...      220.41          N\n",
              "\n",
              "[6818 rows x 12 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 72
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UJs8stMYa31t",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del df['SRG_FLG']"
      ],
      "execution_count": 73,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "w-FzSbkpa7yv",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "19644093-c045-48cf-b688-8715125d287d"
      },
      "source": [
        "df"
      ],
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INMATEID</th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>DISCHARGED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>SEALED</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "      <th>INFRACTION</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152258</td>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>89404</td>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>120.14</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7049</td>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.15</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20207729</td>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>156.10</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20203998</td>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>19225</td>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>20093747</td>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>93606</td>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "      <td>Y</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>14481</td>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>N</td>\n",
              "      <td>130.96</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>167979</td>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>220.41</td>\n",
              "      <td>N</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 11 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      INMATEID              ADMITTED_DT  ...  TOP_CHARGE INFRACTION\n",
              "0       152258  2018-08-24T01:46:33.000  ...      140.25          N\n",
              "1        89404  2019-10-16T11:06:07.000  ...      120.14          N\n",
              "2         7049  2019-11-10T02:32:10.000  ...      140.15          N\n",
              "3     20207729  2019-10-23T03:26:50.000  ...      156.10          N\n",
              "4     20203998  2019-05-02T01:35:22.000  ...      125.25          Y\n",
              "...        ...                      ...  ...         ...        ...\n",
              "6813     19225  2017-02-03T21:36:59.000  ...      125.25          N\n",
              "6814  20093747  2018-11-14T01:38:36.000  ...  110-125.25          N\n",
              "6815     93606  2018-01-22T23:57:24.000  ...  110-125.25          Y\n",
              "6816     14481  2017-08-23T17:21:51.000  ...      130.96          N\n",
              "6817    167979  2018-09-19T16:21:38.000  ...      220.41          N\n",
              "\n",
              "[6818 rows x 11 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 74
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kgK43Pu-ay9W",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del df['INFRACTION']"
      ],
      "execution_count": 75,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "h12of0Pda1k_",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "272324bf-cac4-43fd-9fb9-7dc840b3d317"
      },
      "source": [
        "df"
      ],
      "execution_count": 76,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INMATEID</th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>DISCHARGED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>SEALED</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152258</td>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>89404</td>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>120.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7049</td>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20207729</td>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>156.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20203998</td>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>19225</td>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>20093747</td>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>93606</td>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>14481</td>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>N</td>\n",
              "      <td>130.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>167979</td>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>NaN</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>220.41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 10 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      INMATEID              ADMITTED_DT  DISCHARGED_DT  ...   AGE SEALED  TOP_CHARGE\n",
              "0       152258  2018-08-24T01:46:33.000            NaN  ...  54.0      N      140.25\n",
              "1        89404  2019-10-16T11:06:07.000            NaN  ...  29.0      N      120.14\n",
              "2         7049  2019-11-10T02:32:10.000            NaN  ...  38.0      N      140.15\n",
              "3     20207729  2019-10-23T03:26:50.000            NaN  ...  29.0      N      156.10\n",
              "4     20203998  2019-05-02T01:35:22.000            NaN  ...  27.0      N      125.25\n",
              "...        ...                      ...            ...  ...   ...    ...         ...\n",
              "6813     19225  2017-02-03T21:36:59.000            NaN  ...  43.0      N      125.25\n",
              "6814  20093747  2018-11-14T01:38:36.000            NaN  ...  46.0      N  110-125.25\n",
              "6815     93606  2018-01-22T23:57:24.000            NaN  ...  35.0      N  110-125.25\n",
              "6816     14481  2017-08-23T17:21:51.000            NaN  ...  40.0      N      130.96\n",
              "6817    167979  2018-09-19T16:21:38.000            NaN  ...  43.0      N      220.41\n",
              "\n",
              "[6818 rows x 10 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 76
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RWK5X7_Pesaj",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del df['DISCHARGED_DT']"
      ],
      "execution_count": 77,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nJts5Xu7fYDd",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "41ff0b4c-9bb4-48b1-f072-44014dc8c9b8"
      },
      "source": [
        "df"
      ],
      "execution_count": 78,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>INMATEID</th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>SEALED</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>152258</td>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>89404</td>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>120.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>7049</td>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>20207729</td>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>156.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>20203998</td>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>19225</td>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>20093747</td>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>93606</td>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>14481</td>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>N</td>\n",
              "      <td>130.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>167979</td>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>220.41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 9 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "      INMATEID              ADMITTED_DT CUSTODY_LEVEL  ...   AGE SEALED  TOP_CHARGE\n",
              "0       152258  2018-08-24T01:46:33.000           MIN  ...  54.0      N      140.25\n",
              "1        89404  2019-10-16T11:06:07.000           MAX  ...  29.0      N      120.14\n",
              "2         7049  2019-11-10T02:32:10.000           MAX  ...  38.0      N      140.15\n",
              "3     20207729  2019-10-23T03:26:50.000           MIN  ...  29.0      N      156.10\n",
              "4     20203998  2019-05-02T01:35:22.000           MAX  ...  27.0      N      125.25\n",
              "...        ...                      ...           ...  ...   ...    ...         ...\n",
              "6813     19225  2017-02-03T21:36:59.000           MED  ...  43.0      N      125.25\n",
              "6814  20093747  2018-11-14T01:38:36.000           MAX  ...  46.0      N  110-125.25\n",
              "6815     93606  2018-01-22T23:57:24.000           MAX  ...  35.0      N  110-125.25\n",
              "6816     14481  2017-08-23T17:21:51.000           MED  ...  40.0      N      130.96\n",
              "6817    167979  2018-09-19T16:21:38.000           MIN  ...  43.0      N      220.41\n",
              "\n",
              "[6818 rows x 9 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 78
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LClw7i3OgyHS",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del df['INMATEID']"
      ],
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "qlV_iXbWg3qN",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "4bf9b881-1128-4569-e656-54889a184098"
      },
      "source": [
        "df"
      ],
      "execution_count": 80,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>SEALED</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>120.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>N</td>\n",
              "      <td>140.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>N</td>\n",
              "      <td>156.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>N</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>N</td>\n",
              "      <td>130.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>N</td>\n",
              "      <td>220.41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 8 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                  ADMITTED_DT CUSTODY_LEVEL BRADH  ...   AGE SEALED  TOP_CHARGE\n",
              "0     2018-08-24T01:46:33.000           MIN     Y  ...  54.0      N      140.25\n",
              "1     2019-10-16T11:06:07.000           MAX     N  ...  29.0      N      120.14\n",
              "2     2019-11-10T02:32:10.000           MAX     N  ...  38.0      N      140.15\n",
              "3     2019-10-23T03:26:50.000           MIN     N  ...  29.0      N      156.10\n",
              "4     2019-05-02T01:35:22.000           MAX     Y  ...  27.0      N      125.25\n",
              "...                       ...           ...   ...  ...   ...    ...         ...\n",
              "6813  2017-02-03T21:36:59.000           MED     Y  ...  43.0      N      125.25\n",
              "6814  2018-11-14T01:38:36.000           MAX     Y  ...  46.0      N  110-125.25\n",
              "6815  2018-01-22T23:57:24.000           MAX     Y  ...  35.0      N  110-125.25\n",
              "6816  2017-08-23T17:21:51.000           MED     N  ...  40.0      N      130.96\n",
              "6817  2018-09-19T16:21:38.000           MIN     N  ...  43.0      N      220.41\n",
              "\n",
              "[6818 rows x 8 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 80
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "XupLjfvcap3a",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "del df['SEALED']"
      ],
      "execution_count": 81,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RKLRit34atEM",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "ecac312f-d61a-4b03-cc2e-8ed40ceb160a"
      },
      "source": [
        "df"
      ],
      "execution_count": 82,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ADMITTED_DT</th>\n",
              "      <th>CUSTODY_LEVEL</th>\n",
              "      <th>BRADH</th>\n",
              "      <th>RACE</th>\n",
              "      <th>GENDER</th>\n",
              "      <th>AGE</th>\n",
              "      <th>TOP_CHARGE</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2018-08-24T01:46:33.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>Y</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>54.0</td>\n",
              "      <td>140.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2019-10-16T11:06:07.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>120.14</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>2019-11-10T02:32:10.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>38.0</td>\n",
              "      <td>140.15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>2019-10-23T03:26:50.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>29.0</td>\n",
              "      <td>156.10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>2019-05-02T01:35:22.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>27.0</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>2017-02-03T21:36:59.000</td>\n",
              "      <td>MED</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>2018-11-14T01:38:36.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>46.0</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>2018-01-22T23:57:24.000</td>\n",
              "      <td>MAX</td>\n",
              "      <td>Y</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>35.0</td>\n",
              "      <td>110-125.25</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>2017-08-23T17:21:51.000</td>\n",
              "      <td>MED</td>\n",
              "      <td>N</td>\n",
              "      <td>W</td>\n",
              "      <td>M</td>\n",
              "      <td>40.0</td>\n",
              "      <td>130.96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>2018-09-19T16:21:38.000</td>\n",
              "      <td>MIN</td>\n",
              "      <td>N</td>\n",
              "      <td>B</td>\n",
              "      <td>M</td>\n",
              "      <td>43.0</td>\n",
              "      <td>220.41</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 7 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "                  ADMITTED_DT CUSTODY_LEVEL BRADH RACE GENDER   AGE  TOP_CHARGE\n",
              "0     2018-08-24T01:46:33.000           MIN     Y    W      M  54.0      140.25\n",
              "1     2019-10-16T11:06:07.000           MAX     N    B      M  29.0      120.14\n",
              "2     2019-11-10T02:32:10.000           MAX     N    B      M  38.0      140.15\n",
              "3     2019-10-23T03:26:50.000           MIN     N    W      M  29.0      156.10\n",
              "4     2019-05-02T01:35:22.000           MAX     Y    B      M  27.0      125.25\n",
              "...                       ...           ...   ...  ...    ...   ...         ...\n",
              "6813  2017-02-03T21:36:59.000           MED     Y    B      M  43.0      125.25\n",
              "6814  2018-11-14T01:38:36.000           MAX     Y    B      M  46.0  110-125.25\n",
              "6815  2018-01-22T23:57:24.000           MAX     Y    B      M  35.0  110-125.25\n",
              "6816  2017-08-23T17:21:51.000           MED     N    W      M  40.0      130.96\n",
              "6817  2018-09-19T16:21:38.000           MIN     N    B      M  43.0      220.41\n",
              "\n",
              "[6818 rows x 7 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 82
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0QLwFqpehiHQ",
        "colab_type": "text"
      },
      "source": [
        "##Finding the races and value counts"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vu8x8JZIhfiC",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "3ad78732-5ece-4ed2-a019-574f1af109ee"
      },
      "source": [
        "df['RACE'].head(100)"
      ],
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     W\n",
              "1     B\n",
              "2     B\n",
              "3     W\n",
              "4     B\n",
              "     ..\n",
              "95    B\n",
              "96    O\n",
              "97    O\n",
              "98    B\n",
              "99    B\n",
              "Name: RACE, Length: 100, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 83
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "N-VjxUyHh_ii",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "6d7ab779-8dc1-45eb-99b5-3ed3505bab62"
      },
      "source": [
        "df['RACE'].value_counts()"
      ],
      "execution_count": 84,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "B    3845\n",
              "O    2082\n",
              "W     729\n",
              "A     106\n",
              "I      14\n",
              "U      13\n",
              "Name: RACE, dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 84
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "ggKHFNOQkICi",
        "colab_type": "text"
      },
      "source": [
        "##checking for any null values"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "gRKrJ0P5kAAV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 153
        },
        "outputId": "b1a0c4d5-6727-4e14-d3b8-3d212fd8e32b"
      },
      "source": [
        "df.isnull().sum()"
      ],
      "execution_count": 85,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ADMITTED_DT         0\n",
              "CUSTODY_LEVEL     115\n",
              "BRADH               0\n",
              "RACE               29\n",
              "GENDER             29\n",
              "AGE                13\n",
              "TOP_CHARGE       1023\n",
              "dtype: int64"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 85
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "LdRD6Kgyeqzk",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df[\"GENDER\"] = df[\"GENDER\"].fillna(0)"
      ],
      "execution_count": 86,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "QxtvAMJVevNL",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "df[\"RACE\"] = df[\"RACE\"].fillna(0)"
      ],
      "execution_count": 87,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8VKOlZZyeNLo",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 153
        },
        "outputId": "67df24d8-f053-48bc-e7d3-087f5582d5ed"
      },
      "source": [
        "df.dtypes"
      ],
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "ADMITTED_DT       object\n",
              "CUSTODY_LEVEL     object\n",
              "BRADH             object\n",
              "RACE              object\n",
              "GENDER            object\n",
              "AGE              float64\n",
              "TOP_CHARGE        object\n",
              "dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 88
        }
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "qgIeb3mpHUze",
        "colab_type": "text"
      },
      "source": [
        "##scatter plotting by age"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "aiuQymjAcNx5",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "outputId": "9d308bc0-d7f8-454c-ce24-b22fb5474656"
      },
      "source": [
        "import matplotlib.pyplot as plt\n",
        "\n",
        "age_sort = df.groupby('AGE').count().reset_index()\n",
        "age_x = age_sort.iloc[:,0]\n",
        "age_y = age_sort.iloc[:,1]\n",
        "data = [plt.scatter(x=age_x, y=age_y)]\n",
        "\n",
        "plt.title('Incarceration by age')\n",
        "plt.xlabel('AGE')\n",
        "plt.ylabel('values')\n",
        "plt;"
      ],
      "execution_count": 89,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "image/png": "\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {
            "tags": [],
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ONZx1jzkhZZx",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 187
        },
        "outputId": "ab6e4033-570d-4e15-8f9e-ad1566fbc70a"
      },
      "source": [
        "age_race = df.groupby(['AGE','RACE']).count().reset_index()\n",
        "age_race_pivot = age_race.pivot(columns=\"RACE\", index=\"AGE\").reset_index()\n",
        "print(\"age_race_pivot \\n\", age_race_pivot.head())"
      ],
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "age_race_pivot \n",
            "        AGE ADMITTED_DT                         ... TOP_CHARGE                             \n",
            "RACE                 0    A      B    I     O  ...          A      B    I     O    U     W\n",
            "0     17.0         NaN  NaN   26.0  NaN  11.0  ...        NaN   24.0  NaN  11.0  NaN   1.0\n",
            "1     18.0         NaN  NaN   70.0  NaN  17.0  ...        NaN   69.0  NaN  13.0  NaN   6.0\n",
            "2     19.0         NaN  2.0   85.0  NaN  41.0  ...        2.0   78.0  NaN  37.0  NaN   2.0\n",
            "3     20.0         NaN  2.0   96.0  NaN  51.0  ...        1.0   89.0  NaN  47.0  1.0   5.0\n",
            "4     21.0         NaN  4.0  113.0  1.0  58.0  ...        4.0  101.0  1.0  53.0  1.0  13.0\n",
            "\n",
            "[5 rows x 36 columns]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Ko9hhe3oe4a3",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 419
        },
        "outputId": "1559857c-98f3-4802-bfda-d1d997c7cb97"
      },
      "source": [
        "df1 = df[['GENDER']]\n",
        "df1"
      ],
      "execution_count": 102,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GENDER</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6813</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6814</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6815</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6816</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6817</th>\n",
              "      <td>M</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>6818 rows × 1 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "     GENDER\n",
              "0         M\n",
              "1         M\n",
              "2         M\n",
              "3         M\n",
              "4         M\n",
              "...     ...\n",
              "6813      M\n",
              "6814      M\n",
              "6815      M\n",
              "6816      M\n",
              "6817      M\n",
              "\n",
              "[6818 rows x 1 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 102
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "SBabiLQMkmFL",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 221
        },
        "outputId": "c273834a-de92-4782-8e73-a1977c65565e"
      },
      "source": [
        "df['GENDER'].tail(100)"
      ],
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "6718    M\n",
              "6719    M\n",
              "6720    M\n",
              "6721    M\n",
              "6722    M\n",
              "       ..\n",
              "6813    M\n",
              "6814    M\n",
              "6815    M\n",
              "6816    M\n",
              "6817    M\n",
              "Name: GENDER, Length: 100, dtype: object"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 116
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RGum0jlvi3Vu",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 80
        },
        "outputId": "43016b00-3d57-4eff-a0d7-f47e62158e4e"
      },
      "source": [
        "from scipy import stats\n",
        "import numpy as np\n",
        "df = pd.DataFrame({'GENDER':['M']})\n",
        "   \n",
        "df['GENDER'] = df['GENDER'].str.replace('M','0').astype(float)\n",
        "\n",
        "df.apply(pd.to_numeric)"
      ],
      "execution_count": 120,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>GENDER</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>0.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "   GENDER\n",
              "0     0.0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 120
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "S8N9IRB0j4gq",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": null,
      "outputs": []
    }
  ]
}